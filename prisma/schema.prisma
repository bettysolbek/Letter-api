// Define the data source
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Define the Prisma client generator
generator client {
  provider = "prisma-client-js"
}

// Define the User model
model User {
  id              String        @id @default(auto()) @map("_id") @test.Int
  username        String        @unique
  password        String
  roleId          Int
  role            Role          @relation(fields: [roleId], references: [id])
  sentLetters     Letter[]      @relation("SentLetters")
  receivedLetters Letter[]      @relation("ReceivedLetters")
  approvedLetters Letter[]      @relation("ApprovedLetters")
  attachments     Attachment[]  @relation("UserAttachments")
  isAdmin         Boolean       @default(false)
  activityLogs    ActivityLog[] @relation("UserActivityLogs")
}
// Define the Role model
model Role {
  id           Int           @id @default(autoincrement())
  name         String
  isAdmin      Boolean       @default(false)
  permissions  Permission[]
  users        User[]
  activityLogs ActivityLog[]
}



// Define the Permission model
model Permission {
  id          Int     @id @default(autoincrement())
  name        String
  description String?
  roles       Role[]
}

// Define the Letter model
model Letter {
  id           String        @id @default(auto()) @map("_id") @test.Int
  senderId     String
  recipientId  String
  approvedById String?
  subject      String
  content      String
  status       String        @default("pending") 
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  activityLogs ActivityLog[] @relation("LetterActivityLogs", fields: [id], references: [userId])
  sender       User          @relation("SentLetters", fields: [senderId], references: [id])
  recipient    User          @relation("ReceivedLetters", fields: [recipientId], references: [id])
  approvedBy   User?         @relation("ApprovedLetters", fields: [approvedById], references: [id])
  attachments  Attachment[]  @relation("LetterAttachments")
}

// Define the Attachment model
model ActivityLog {
  id        Int      @id @default(autoincrement())
  action    String
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  letter    Letter   @relation(fields: [letterId], references: [id])
  letterId  String
}

model Attachment {
  id       String        @id @default(auto()) @map("_id") @test.Int
  userId   String
  letterId String
  file     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user     User          @relation(fields: [userId], references: [id])
  letter   Letter        @relation(fields: [letterId], references: [id])
}

// Define the User model, Letter model, and other models accordingly...

